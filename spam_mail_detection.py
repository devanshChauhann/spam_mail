# -*- coding: utf-8 -*-
"""spam_mail_detection

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xWHO5FayJKKC8zHyALEIIbbeg_EMMX6c
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

raw_mail_data=pd.read_csv('/content/mail_data.csv')

print(raw_mail_data)

mail_data=raw_mail_data.where((pd.notnull(raw_mail_data)),'')

mail_data.head()

mail_data.shape

mail_data.loc[mail_data['Category'] == 'spam', 'Category'] = 0
mail_data.loc[mail_data['Category'] == 'ham', 'Category'] = 1

mail_data.head()

x=mail_data['Message']
y=mail_data['Category']

print(x)
print(y)

X_train,X_test,Y_train,Y_test=train_test_split(x,y,test_size=0.2,random_state=3)

print(x.shape)
print(X_train.shape)
print(X_test.shape)

feature_extraction = TfidfVectorizer(min_df=1, stop_words='english', lowercase=True)

X_train_feature=feature_extraction.fit_transform(X_train)
X_test_feature=feature_extraction.transform(X_test)

Y_train=Y_train.astype('int')
Y_test=Y_test.astype('int')

print(X_train_feature)

model=LogisticRegression()

model.fit(X_train_feature,Y_train)

prediction_on_training_data=model.predict(X_train_feature)
accuracy_on_training_data=accuracy_score(Y_train,prediction_on_training_data)

print("Accuracy on training data",accuracy_on_training_data)

prediction_on_testing_data=model.predict(X_test_feature)
accuracy_on_testing_data=accuracy_score(Y_test,prediction_on_testing_data)

print("Accuracy on testing data",accuracy_on_testing_data)

input_mail = [input("Enter the mail content: ")]


input_data_feature = feature_extraction.transform(input_mail)


prediction = model.predict(input_data_feature)


if prediction[0] == 1:
    print("Ham mail")
else:
    print("Spam mail")